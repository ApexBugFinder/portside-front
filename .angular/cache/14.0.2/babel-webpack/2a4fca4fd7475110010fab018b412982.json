{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport * as fromUserState from '../state';\nimport * as UserActions from '../state/user.actions';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nexport let EditProfileComponent = /*#__PURE__*/(() => {\n  class EditProfileComponent {\n    constructor(fb, userStore) {\n      this.fb = fb;\n      this.userStore = userStore;\n      this.iconSave = faSave;\n      this.userToEdit$ = this.userStore.pipe(select(fromUserState.getCurrentUserInfo));\n      this.editProfileForm = this.fb.group({\n        username: [''],\n        email: ['']\n      });\n    }\n\n    ngOnInit() {\n      this.userToEdit$.subscribe({\n        next: value => {\n          if (value) {\n            this.userToEdit = JSON.parse(JSON.stringify(value));\n            this.origUserToEdit = value;\n          }\n        },\n        error: err => console.log(\"OOps sorry, error occured getting a User's Information from the user store Profile Edit Shell component: \", err),\n        complete: () => console.log(\"Completed gettinga User's Information from the user store Profile Edit Shell component\")\n      });\n      this.initControls();\n      this.setControls();\n      this.monitorAndControl();\n    }\n\n    initControls() {\n      this.emailAbstractControl = this.editProfileForm.get('email');\n      this.userNameAbstractControl = this.editProfileForm.get('username');\n    }\n\n    setControls() {\n      var _a, _b;\n\n      (_a = this.emailAbstractControl) === null || _a === void 0 ? void 0 : _a.setValue(this.userToEdit.email);\n      (_b = this.userNameAbstractControl) === null || _b === void 0 ? void 0 : _b.setValue(this.userToEdit.username);\n    }\n\n    monitorAndControl() {\n      var _a, _b;\n\n      (_a = this.emailAbstractControl) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe({\n        next: value => {\n          if (value) {\n            console.log(value);\n            this.userStore.dispatch(new UserActions.SetUserEmail(value));\n          }\n        },\n        error: err => console.log(\"OOps sorry, error occured setting a User's Email Information from the user store Profile Edit Shell component: \", err),\n        complete: () => console.log(\"Completed setting a User's Email Information from the user store Profile Edit Shell component\")\n      });\n      (_b = this.userNameAbstractControl) === null || _b === void 0 ? void 0 : _b.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe({\n        next: value => {\n          if (value) {\n            this.userStore.dispatch(new UserActions.SetUserStateUsername(value));\n          }\n        },\n        error: err => console.log(\"OOps sorry, error occured setting a User's Username Information from the user store Profile Edit Shell component: \", err),\n        complete: () => console.log(\"Completed setting a User's Username Information from the user store Profile Edit Shell component\")\n      });\n    }\n\n  }\n\n  EditProfileComponent.ɵfac = function EditProfileComponent_Factory(t) {\n    return new (t || EditProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  EditProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditProfileComponent,\n    selectors: [[\"app-edit-profile\"]],\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"divContainer\"], [3, \"formGroup\"], [1, \"infoContainer\", \"firstInfo\"], [1, \"infoShell\"], [\"placeholder\", \"Username\", \"id\", \"usernameId\", \"matInput\", \"\", \"formControlName\", \"username\", \"type\", \"text\"], [1, \"infoContainer\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"one@example.com\", \"id\", \"emailId\", \"formControlName\", \"email\"]],\n    template: function EditProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"mat-form-field\")(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 3)(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 5);\n        i0.ɵɵelement(15, \"div\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.editProfileForm);\n      }\n    },\n    styles: [\".divContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column;row-gap:10px;min-height:60px}.infoContainer[_ngcontent-%COMP%]{width:85%;margin:auto;min-height:50px}.infoContainer[_ngcontent-%COMP%]   .infoShell[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:row;column-gap:30px;align-items:center;margin:10px 0}.infoContainer[_ngcontent-%COMP%]   .infoShell[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:0}.infoContainer[_ngcontent-%COMP%]   .infoShell[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .infoContainer[_ngcontent-%COMP%]   .infoShell[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.infoContainer.firstInfo[_ngcontent-%COMP%]{margin-top:20px}\"]\n  });\n  return EditProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}