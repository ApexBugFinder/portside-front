{"ast":null,"code":"import { defaultProject } from 'src/app/project/models/project';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { EditShellComponent } from '../../project/edit/edit-shell.component';\nimport * as fromProject from '../../project/state';\nimport { select } from '@ngrx/store';\nimport * as editProjectActions from '../../project/edit/state/edit-project.actions';\nimport * as fromAuth from '../../auth/state';\nimport * as fromShared from '../../shared/state';\nimport { MakeGuid } from 'src/app/helpers/make-guid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/project/services/project.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/material/dialog\";\n\nfunction ProjectComponent_app_action_buttons_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-action-buttons\", 3);\n    i0.ɵɵlistener(\"addClassSignal\", function ProjectComponent_app_action_buttons_1_Template_app_action_buttons_addClassSignal_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.createProject());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"myClass\", ctx_r0.pageClass);\n  }\n}\n\nfunction ProjectComponent_div_4_app_project_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-project-card\", 6);\n  }\n\n  if (rf & 2) {\n    const projec_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"project\", projec_r5);\n  }\n}\n\nfunction ProjectComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, ProjectComponent_div_4_app_project_card_1_Template, 1, 1, \"app-project-card\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.myProjects);\n  }\n}\n\nexport let ProjectComponent = /*#__PURE__*/(() => {\n  class ProjectComponent {\n    constructor(projectService, editProjectStore, projectStore, authStore, sharedStore, dialog) {\n      this.projectService = projectService;\n      this.editProjectStore = editProjectStore;\n      this.projectStore = projectStore;\n      this.authStore = authStore;\n      this.sharedStore = sharedStore;\n      this.dialog = dialog;\n      this.faPlusCircle = faPlusCircle;\n      this.myProjects = [];\n      this.pageClass = 'Project';\n      console.log(this.myProjects);\n      this.userProjects$ = this.projectStore.pipe(select(fromProject.selectAllProjects));\n      this.isAuthenticated$ = this.authStore.pipe(select(fromAuth.getIsAuthenticated));\n      this.authenticatedUserID$ = this.authStore.pipe(select(fromAuth.getAuthenticatedUserId));\n      this.userID$ = this.sharedStore.pipe(select(fromShared.getUserId));\n      this.loggedInMenuOpen$ = this.sharedStore.pipe(select(fromShared.getSideMenuState));\n    }\n\n    ngOnInit() {\n      this.userID$.subscribe({\n        next: value => {\n          this.userID = value;\n          console.log(\"User ID on project component\", value);\n          return value;\n        },\n        error: err => console.log(\"OOps sorry, error occured getting the user's ID from sharedstore in project component: \", err),\n        complete: () => console.log(\"Completed getting user's isAuthenticated from ngrx Authstore in project component\")\n      });\n      this.isAuthenticated$.subscribe({\n        next: value => {\n          this.isAuthenticated = value;\n          console.log('User isAuthenticated on project component', value);\n          return value;\n        },\n        error: err => console.log(\"OOps sorry, error occured getting the user's isAuthenticated from Authstore in project component: \", err),\n        complete: () => console.log(\"Completed getting user's isAuthenticated from ngrx Authstore in project component\")\n      });\n      this.authenticatedUserID$.subscribe({\n        next: value => {\n          this.authenticatedUserID = value;\n          console.log(\"Authenticated UserID on project component\", value);\n          return value;\n        },\n        error: err => console.log(\"OOps sorry, error occured getting the Authenticated UserID from Authstore in project component: \", err),\n        complete: () => console.log(\"Completed getting Authenticated UserID from ngrx Authstore in project component\")\n      });\n      this.userProjects$.subscribe({\n        next: value => {\n          if (this.isAuthenticated) {\n            this.myProjects = value; // if (this.myProjects.length === 0 && (this.userID !== null && this.userID !== undefined)) {\n            //   this.editProjectStore.dispatch(\n            //     new editProjectActions.LoadProjectsByProjectCreatorIDFromDB(this.userID)\n            //   );\n            // }\n          } else {\n            // this.myProjects = value.filter(i => i?.published == true);\n            this.myProjects = value;\n          }\n\n          console.log('my projects in observable on project component', value);\n          return value;\n        },\n        error: err => console.log(\"OOps sorry, error occured getting the user's projects from store in project component: \", err),\n        complete: () => console.log(\"Completed getting user's projects from ngrx store in project component\")\n      });\n    }\n\n    createProject() {\n      let createNew = JSON.parse(JSON.stringify(defaultProject));\n      var id = new MakeGuid().id;\n      createNew.id = JSON.parse(JSON.stringify(id.toString()));\n      createNew.projectCreatorID = this.authenticatedUserID;\n      console.log('New Project ID: ', createNew.id);\n      createNew.projectName = 'New Project - ' + createNew.id; // CREATE NEW PROJECT\n\n      console.log('Save New Edit Project: ', createNew); // SAVE TO DB\n\n      this.editProjectStore.dispatch(new editProjectActions.SetEditProject(createNew));\n      this.editProjectStore.dispatch(new editProjectActions.SaveEditProjectToDB()); // OPEN EDIT SHELL\n\n      const dialogRef = this.dialog.open(EditShellComponent, {\n        width: '980px',\n        panelClass: 'custom-modalbox'\n      });\n    }\n\n  }\n\n  ProjectComponent.ɵfac = function ProjectComponent_Factory(t) {\n    return new (t || ProjectComponent)(i0.ɵɵdirectiveInject(i1.ProjectService), i0.ɵɵdirectiveInject(i2.Store), i0.ɵɵdirectiveInject(i2.Store), i0.ɵɵdirectiveInject(i2.Store), i0.ɵɵdirectiveInject(i2.Store), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  ProjectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectComponent,\n    selectors: [[\"app-project\"]],\n    decls: 5,\n    vars: 6,\n    consts: [[1, \"sectionContainer\"], [\"class\", \"addProjectsContainer\", 3, \"myClass\", \"addClassSignal\", 4, \"ngIf\"], [\"class\", \"displayProjectsSection\", 4, \"ngIf\"], [1, \"addProjectsContainer\", 3, \"myClass\", \"addClassSignal\"], [1, \"displayProjectsSection\"], [3, \"project\", 4, \"ngFor\", \"ngForOf\"], [3, \"project\"]],\n    template: function ProjectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ProjectComponent_app_action_buttons_1_Template, 1, 1, \"app-action-buttons\", 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵtemplate(4, ProjectComponent_div_4_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated && i0.ɵɵpipeBind1(2, 2, ctx.userID$) == i0.ɵɵpipeBind1(3, 4, ctx.authenticatedUserID$));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.myProjects);\n      }\n    },\n    styles: [\".sectionContainer[_ngcontent-%COMP%]{width:100%}.sectionContainer[_ngcontent-%COMP%]   .displayProjectsSection[_ngcontent-%COMP%]{display:flex;justify-self:flex-start;flex-direction:row;column-gap:30px;row-gap:40px;margin-top:40px;margin-left:280px;flex-wrap:wrap;width:calc(100% - 280px);justify-content:flex-start}@media (max-width: 600px){.sectionContainer[_ngcontent-%COMP%]   .displayProjectsSection[_ngcontent-%COMP%]{display:flex;justify-self:flex-start;flex-direction:row;column-gap:30px;row-gap:40px;margin:140px 0 20px 250px;flex-wrap:wrap;width:360px;min-width:360px;justify-content:flex-start}}.sectionContainer[_ngcontent-%COMP%]   .addProjectsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;column-gap:20px;width:80%;margin:0 0 0 10%;justify-content:flex-end}.sectionContainer[_ngcontent-%COMP%]   .fa-plus-circle[_ngcontent-%COMP%]{color:green}.sectionContainer[_ngcontent-%COMP%]   .addProjectIcon[_ngcontent-%COMP%]{font-size:30px;color:var(--accent2Color)}.sectionContainer[_ngcontent-%COMP%]   p.iconLabel[_ngcontent-%COMP%]{font-size:18px;font-family:futura-pt,sans-serif;margin:auto;padding-top:5px;text-decoration:underline}\"]\n  });\n  return ProjectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}