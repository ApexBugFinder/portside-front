{"ast":null,"code":"import { select } from '@ngrx/store';\nimport * as CertificationActions from '../state/certification-shell.actions';\nimport { EditCertificationShellComponent } from '../edit-certification-shell/edit-certification-shell.component';\nimport * as fromAuth from '../../../auth/state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nexport let ViewCertComponent = /*#__PURE__*/(() => {\n  class ViewCertComponent {\n    constructor(certificationShellStore, dialog, authStore) {\n      this.certificationShellStore = certificationShellStore;\n      this.dialog = dialog;\n      this.authStore = authStore;\n      this.isAuth$ = this.authStore.pipe(select(fromAuth.getIsAuthenticated));\n      this.authID$ = this.authStore.pipe(select(fromAuth.getAuthenticatedUserId));\n    }\n\n    ngOnInit() {\n      this.isAuth$.subscribe({\n        next: authState => {\n          this.isAuth = authState;\n        },\n        complete: () => console.log('Completed successfully fetching isAuth State from AuthState'),\n        error: err => console.log('OOPs something went wrong fetching isAuth State from the AuthState', err)\n      });\n      this.authID$.subscribe({\n        next: id => {\n          this.authID = id;\n        },\n        complete: () => console.log('Completed successfully fetching authorized User ID from Auth State'),\n        error: err => console.log('OOPs something went wrong fetching authorized UserID from Auth State', err)\n      });\n    }\n\n    editCert() {\n      // Set myCert to current Certifiation\n      if (this.myCert.projectCreatorID == this.authID && this.isAuth) {\n        console.log(this.myCert);\n        this.certificationShellStore.dispatch(new CertificationActions.SetOriginalCertificationFromViewCert(this.myCert)); // start edit dialog\n\n        const dialogRef = this.dialog.open(EditCertificationShellComponent, {\n          panelClass: \"custom-modalbox2\"\n        });\n      }\n    }\n\n  }\n\n  ViewCertComponent.ɵfac = function ViewCertComponent_Factory(t) {\n    return new (t || ViewCertComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i1.Store));\n  };\n\n  ViewCertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViewCertComponent,\n    selectors: [[\"app-view-cert\"]],\n    inputs: {\n      myCert: \"myCert\"\n    },\n    decls: 26,\n    vars: 9,\n    consts: [[1, \"shellContainer\"], [1, \"shellContent\"], [1, \"certName\"], [3, \"click\"], [1, \"issuedHeading\"], [1, \"issuedData\"], [1, \"validHeading\"], [1, \"validData\"], [1, \"certIDHeading\"], [1, \"certIDData\"], [1, \"issuingBodyHeading\"], [1, \"issuingBodyingData\"], [1, \"isb-dataContainer\"], [1, \"isb-Logo\"], [\"src\", \"\", \"alt\", \"\", 1, \"isb-logo\", 3, \"appImgSrc\"], [1, \"isb-Name\"]],\n    template: function ViewCertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p\", 3);\n        i0.ɵɵlistener(\"click\", function ViewCertComponent_Template_p_click_3_listener() {\n          return ctx.editCert();\n        });\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \"Issued:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵtext(11, \"Valid:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8);\n        i0.ɵɵtext(15, \"CertID#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 10);\n        i0.ɵɵtext(19, \"Issuing Body:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"div\", 12)(22, \"div\", 13);\n        i0.ɵɵelement(23, \"img\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 15);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.myCert.certName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 6, ctx.myCert.issuedDate, \"MM/YYYY\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.myCert.isActive);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.myCert.certID);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"appImgSrc\", ctx.myCert.issuingBody_Logo);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.myCert.issuingBody_Name);\n      }\n    },\n    dependencies: [i3.DatePipe],\n    styles: [\".shellContainer[_ngcontent-%COMP%]{font-size:12px;font-family:futura-pt;width:100%;margin:auto auto 30px;display:flex;flex-direction:row}.shellContainer[_ngcontent-%COMP%]   .shellContent[_ngcontent-%COMP%]{display:grid;justify-content:flex-start;align-items:center;grid-template-areas:\\\"p a a a a a a a a a\\\" \\\"b b ba h h bf f f f f \\\" \\\"c c ca ca l l l l l  l\\\" \\\"d d da da n n n  n n n\\\";grid-template-columns:10px 30px 40px 50px 40px 60px 80px 50px 50px 200px;grid-template-rows:40px 30px 40px auto}.shellContainer[_ngcontent-%COMP%]   .shellContent[_ngcontent-%COMP%] > .certName[_ngcontent-%COMP%]{grid-area:a;margin:10px}.shellContainer[_ngcontent-%COMP%]   .shellContent[_ngcontent-%COMP%] > .certName[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:var(--accent3Color);width:-moz-fit-content;width:fit-content;text-decoration:underline}.shellContainer[_ngcontent-%COMP%]   .issuedHeading[_ngcontent-%COMP%]{grid-area:ba;color:var(--accent1Color)}.shellContainer[_ngcontent-%COMP%]   .issuedData[_ngcontent-%COMP%]{grid-area:h}.shellContainer[_ngcontent-%COMP%]   .validHeading[_ngcontent-%COMP%]{grid-area:bf;color:var(--accent1Color)}.shellContainer[_ngcontent-%COMP%]   .validData[_ngcontent-%COMP%]{grid-area:f}.shellContainer[_ngcontent-%COMP%]   .certIDHeading[_ngcontent-%COMP%]{grid-area:ca;color:var(--accent1Color)}.shellContainer[_ngcontent-%COMP%]   .certIDData[_ngcontent-%COMP%]{grid-area:l}.shellContainer[_ngcontent-%COMP%]   .issuingBodyHeading[_ngcontent-%COMP%]{grid-area:da;align-self:center;vertical-align:center;color:var(--accent1Color)}.shellContainer[_ngcontent-%COMP%]   .issuingBodyingData[_ngcontent-%COMP%]{grid-area:n}.shellContainer[_ngcontent-%COMP%]   .issuingBodyingData[_ngcontent-%COMP%]   .isb-dataContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;column-gap:10px;align-items:center}.shellContainer[_ngcontent-%COMP%]   .issuingBodyingData[_ngcontent-%COMP%]   .isb-dataContainer[_ngcontent-%COMP%]   .isb-logo[_ngcontent-%COMP%]{max-height:40px;max-width:60px;align-self:center;justify-self:center}.shellContainer[_ngcontent-%COMP%]   .issuingBodyingData[_ngcontent-%COMP%]   .isb-dataContainer[_ngcontent-%COMP%]   .isb-Name[_ngcontent-%COMP%]{align-self:center;overflow-wrap:anywhere;width:100px;height:auto}\"]\n  });\n  return ViewCertComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}